{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Notifications.jsx","components/Options.jsx","components/message.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","username","prompt","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","users","setUsers","message","setMessage","messages","setMessages","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","emit","user","filter","Provider","value","callUser","peer","Peer","initiator","trickle","data","userToCall","signalData","leaveCall","destroy","answerCall","to","muteUnmuteV","enabled","getVideoTracks","muteUnmuteA","getAudioTracks","submit","event","preventDefault","shareScreen","getDisplayMedia","cursor","echoCancellation","noiseSuppression","sampleRate","screenStream","replaceTrack","getTracks","onended","useStyles","makeStyles","theme","justifyContent","width","breakpoints","down","gridContainer","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","style","display","Button","color","onClick","Notifications","root","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","Message","class","map","index","date","moment","format","onSubmit","type","currentTarget","align","appBar","borderRadius","alignItems","wrapper","App","AppBar","position","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2afc3b6d.chunk.js","sourcesContent":["import React, { createContext ,useState , useRef, useEffect} from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('https://my-video-chat-application.herokuapp.com');\r\n\r\nconst username = prompt(\"what is your username\");\r\n\r\nconst ContextProvider =({ children })=> {\r\n    const [stream, setStream] = useState(null);\r\n    const [me, setMe] = useState('');\r\n    const [call,setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    \r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n        .then((currentStream) => {\r\n            setStream(currentStream);\r\n            myVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('me', (id) => setMe(id));\r\n\r\n        socket.on('calluser', ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivingCall: true, from, name: callerName, signal })\r\n        });\r\n\r\n        socket.on(\"connect\", () => {\r\n            socket.emit(\"username\", username);\r\n        });\r\n      \r\n        socket.on(\"users\", users => {\r\n            setUsers(users);\r\n        });\r\n      \r\n        socket.on(\"message\", message => {\r\n            setMessages(messages => [...messages, message]);\r\n        });\r\n      \r\n        socket.on(\"connected\", user => {\r\n            setUsers(users => [...users, user]);\r\n        });\r\n      \r\n        socket.on(\"disconnected\", id => {\r\n            setUsers(users => {\r\n              return users.filter(user => user.id !== id);\r\n            });\r\n        });\r\n    }, []);\r\n\r\n//Make_a_call\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n        \r\n        peer.on('signal', (data) => {\r\n            socket.emit('calluser', { userToCall: id, signalData: data, from: me, name });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callaccepted',(signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n//Answer_call\r\n    const answerCall = () =>{\r\n    setCallAccepted(true)\r\n\r\n    const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n    peer.on('signal', (data) => {\r\n        socket.emit('answercall', { signal: data, to: call.from });\r\n    });\r\n\r\n    peer.on('stream', (currentStream) => {\r\n        userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    peer.signal(call.signal);\r\n\r\n    connectionRef.current = peer;\r\n    }\r\n\r\n//Exit_call   \r\n    const leaveCall = () =>{\r\n        setCallEnded(true);\r\n        connectionRef.current.destroy();\r\n    }\r\n\r\n//Video_toggle   \r\n    const muteUnmuteV = () => { \r\n        const enabled = stream.getVideoTracks()[0].enabled;\r\n        if (enabled) {\r\n            myVideo.current.srcObject.getVideoTracks()[0].enabled = false;\r\n        } \r\n        else {\r\n            myVideo.current.srcObject.getVideoTracks()[0].enabled = true;\r\n        }\r\n    }\r\n    \r\n//Audio_toggle\r\n    const muteUnmuteA = () => { \r\n        const enabled = stream.getAudioTracks()[0].enabled;\r\n        if (enabled) {\r\n            myVideo.current.srcObject.getAudioTracks()[0].enabled = false;\r\n        } \r\n        else {\r\n            myVideo.current.srcObject.getAudioTracks()[0].enabled = true;\r\n        }\r\n    }\r\n\r\n//Share_screen\r\n    const  shareScreen=() =>{\r\n        navigator.mediaDevices.getDisplayMedia( {\r\n            video: {\r\n                cursor: \"always\"\r\n            },\r\n            audio: {\r\n                echoCancellation: true,\r\n                noiseSuppression: true,\r\n                sampleRate: 44100\r\n            }\r\n        } )\r\n        .then((screenStream) => {\r\n            setStream(screenStream);\r\n            connectionRef.current.replaceTrack(stream.getVideoTracks()[0],screenStream.getVideoTracks()[0],stream);\r\n            myVideo.current.srcObject = screenStream;\r\n\r\n            screenStream.getTracks()[0].onended = () =>{\r\n                connectionRef.current.replaceTrack(screenStream.getVideoTracks()[0],stream.getVideoTracks()[0],stream);\r\n                myVideo.current.srcObject=stream;\r\n            }\r\n        })\r\n    }\r\n\r\n//Messenger\r\n    const submit = event => {\r\n        event.preventDefault();\r\n        socket.emit(\"send\", message);\r\n        setMessage(\"\");\r\n    }\r\n        \r\n    \r\n        \r\n    return(\r\n        <SocketContext.Provider value={{call,callAccepted,myVideo,userVideo,stream,name,setName,callEnded,me,callUser,leaveCall,answerCall,muteUnmuteV,muteUnmuteA,users,message,messages,submit,setMessage,shareScreen}}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n}\r\n\r\nexport { ContextProvider, SocketContext };","import React, { useContext } from 'react';\r\nimport {Button, Grid, Typography, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    video: {\r\n      justifyContent: 'center',\r\n      width: '550px',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '300px',\r\n      },\r\n    },\r\n    gridContainer: {\r\n      justifyContent: 'center',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    paper: {\r\n      justifyContent: 'center',\r\n      padding: '10px',\r\n      border: '5px solid black',\r\n      margin: '10px',\r\n    },\r\n}));\r\n\r\nconst VideoPlayer = () => {\r\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call,muteUnmuteV,muteUnmuteA,shareScreen } = useContext(SocketContext);\r\n    const classes = useStyles();\r\n    \r\n    return(\r\n        <Grid container className={classes.gridContainer}>\r\n            {/* our video */}\r\n            {stream && (\r\n                <Paper className={classes.paper}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"h4\" gutterBottom>{name || 'Name'}</Typography>\r\n                        <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\r\n                    </Grid>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                    <Button variant=\"contained\"  color=\"secondary\"  onClick={muteUnmuteV} className={classes.margin}>\r\n                        Video ON/OFF\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\"  onClick={muteUnmuteA} className={classes.margin}>\r\n                        Audio ON/OFF\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\"  onClick={shareScreen} className={classes.margin}>\r\n                        Screen Share\r\n                    </Button>\r\n                    \r\n                    </div>\r\n                </Paper>\r\n            )}   \r\n            {/* user's video */}\r\n            {callAccepted && !callEnded && (\r\n                <Paper className={classes.paper}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"h4\" gutterBottom>{call.name || 'Name'}</Typography>\r\n                        <video playsInline ref={userVideo} autoPlay className={classes.video} />\r\n                    </Grid>\r\n                </Paper>\r\n            )}    \r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default VideoPlayer;","import React ,{ useContext } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { SocketContext } from '../SocketContext';\r\n\r\n\r\nconst Notifications = () => {\r\n    const { answerCall, call, callAccepted } = useContext(SocketContext);\r\n\r\n    return (\r\n        <>\r\n            {call.isReceivingCall && !callAccepted && (\r\n                <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                    <h1>{call.name} is calling:</h1>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n                        Answer\r\n                    </Button>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Notifications;","import React, { useContext, useState } from 'react';\r\nimport { Button, TextField, Grid, Typography, Container, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  gridContainer: {\r\n    width: '100%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  container: {\r\n    width: '600px',\r\n    margin: '5px 0',\r\n    padding: 0,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '80%',\r\n    },\r\n  },\r\n  margin: {\r\n    marginTop: 20,\r\n  },\r\n  padding: {\r\n    padding: 20,\r\n  },\r\n  paper: {\r\n    padding: '10px 20px',\r\n    border: '5px solid black',\r\n  },\r\n}));\r\n\r\n\r\nconst Options = ( { children }) => {\r\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser} = useContext(SocketContext);\r\n  const [idToCall, setIdToCall] = useState('');\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Paper elevation={10} className={classes.paper}>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <Grid container className={classes.gridContainer}>\r\n            <Grid item xs={12} md={6} className={classes.padding}>\r\n              <Typography gutterBottom variant=\"h4\">Your name</Typography>\r\n              <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\r\n              <CopyToClipboard text={me} className={classes.margin}>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n                  Copy Your ID\r\n                </Button>\r\n              </CopyToClipboard>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} md={6} className={classes.padding}>\r\n              <Typography gutterBottom variant=\"h4\">Make a call</Typography>\r\n              <TextField label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\r\n              {callAccepted && !callEnded ? (\r\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth onClick={leaveCall} className={classes.margin} >\r\n                  Exit call\r\n                </Button>\r\n                ) : (\r\n                <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth onClick={() => callUser(idToCall)} className={classes.margin}>\r\n                  Dial\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Grid> \r\n        </form>\r\n        {children}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Options;\r\n\r\n","import React,{ useContext } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./messagestyle.css\";\r\nimport { Button, Grid, Typography, Container, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from \"moment\";\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  gridContainer: {\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  container: {\r\n    justifyContent: 'center',\r\n    width: '600px',\r\n    margin: '0px 0',\r\n    padding: 0,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '80%',\r\n    }\r\n  },\r\n  \r\n  margin: {\r\n    marginTop: 20,\r\n  },\r\n  padding: {\r\n    padding: 0,\r\n  },\r\n  paper: {\r\n    justifyContent: 'center',\r\n    padding: '0px 0px',\r\n    border: '4px solid black',\r\n\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst Message =() =>{\r\n  const {users,message,messages,submit,setMessage} =useContext(SocketContext);\r\n  const classes = useStyles();\r\n  \r\n  return(\r\n    <Container className={classes.container}>\r\n      <Paper elevation={10} className={classes.paper}>\r\n        <Grid container className={classes.gridContainer}>\r\n          <Typography variant=\"h4\" >Messenger</Typography>\r\n          <div id=\"messages\" class=\"overflow-auto\">\r\n            {messages.map(({ user, date, text }, index) => (\r\n              <div key={index} class=\"row\">\r\n                <div  class=\"left\"><h7><b>{user.name}</b></h7></div>\r\n                <div class=\"middle\" ><i>{moment(date).format(\"h:mma\")}</i></div>\r\n                <div class=\"right\" >{text}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n            \r\n          <form onSubmit={submit} id=\"form\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\" \r\n                  onChange={e => setMessage(e.currentTarget.value)}\r\n                  value={message}\r\n                  id=\"text\"/>\r\n                <span className=\"input-group-btn\">\r\n                  <Button variant=\"contained\" color=\"secondary\" id=\"submit\" type=\"submit\"  onClick={submit} className={classes.margin}>\r\n                    Send\r\n                  </Button>\r\n                </span>\r\n              </div>\r\n          </form>\r\n        </Grid>\r\n      </Paper>\r\n                    \r\n      <Paper elevation={10} className={classes.paper}>\r\n        <div align=\"left\" className=\"col-md-4\" >\r\n          <h5>Users Online</h5>\r\n          <ul id=\"users\">\r\n            {users.map(({ name, id }) => (\r\n              <li key={id}>{name}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Typography, AppBar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Notifications from './components/Notifications';\r\nimport Options from './components/Options';\r\nimport Message from './components/message';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        borderRadius: 20,\r\n        margin: '5px 100px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '600px',\r\n        border: '5px solid black',\r\n        [theme.breakpoints.down('xs')]: {\r\n        width: '90%',\r\n        },\r\n    },\r\n   \r\n    wrapper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.wrapper}>\r\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n                <Typography variant=\"h2\" align=\"center\">Video Chatting</Typography>\r\n            </AppBar>\r\n            <VideoPlayer />\r\n            <Options>\r\n                <Notifications />\r\n            </Options>\r\n            <Message />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { ContextProvider } from './SocketContext';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <App />\r\n    </ContextProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}