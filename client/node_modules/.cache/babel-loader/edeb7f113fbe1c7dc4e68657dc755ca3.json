{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kriti\\\\Desktop\\\\web_chat_app\\\\client\\\\src\\\\SocketContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:5000');\n\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [stream, setStream] = useState(null);\n  const [me, setMe] = useState('');\n  const [call, setCall] = useState({});\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState('');\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n    });\n    socket.on('me', id => setMe(id));\n    socket.on('calluser', ({\n      from,\n      name: callerName,\n      signal\n    }) => {\n      setCall({\n        isReceivingCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n    var myStream;\n    var peer = new Peer({\n      key: 'PeerJS key'\n    });\n\n    var setOthersStream = function (stream) {\n      $('#others-video').prop('src', URL.createObjectURL(stream));\n    };\n\n    var setMyStream = function (stream) {\n      myStream = stream;\n      $('#video').prop('src', URL.createObjectURL(stream));\n    };\n\n    peer.on('open', function (id) {\n      $('#peer-id').text(id);\n    });\n    peer.on('call', function (call) {\n      call.answer(myStream);\n      call.on('stream', setOthersStream);\n    });\n    $(function () {\n      navigator.getUserMedia({\n        audio: true,\n        video: true\n      }, setMyStream, function () {});\n      $('#call').on('click', function () {\n        var call = peer.call($('#others-peer-id').val(), myStream);\n        call.on('stream', setOthersStream);\n      });\n    });\n    peer.on('error', function (e) {\n      console.log(e.message);\n    }); //create button to toggle video\n\n    var video_button = document.createElement(\"video_button\");\n    video_button.appendChild(document.createTextNode(\"Toggle hold\"));\n\n    video_button.video_onclick = function () {\n      myStream.getVideoTracks()[0].enabled = !myStream.getVideoTracks()[0].enabled;\n    };\n\n    var audio_button = document.createElement(\"audio_button\");\n    video_button.appendChild(document.createTextNode(\"Toggle hold\"));\n\n    audio_button.audio_onclick = function () {\n      myStream.getAudioTracks()[0].enabled = !myStream.getAudioTracks()[0].enabled;\n    };\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('answercall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('calluser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callaccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContextProvider, \"DQdO+HX8c9NPaJfje35g0kQjBrA=\");\n\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/kriti/Desktop/web_chat_app/client/src/SocketContext.js"],"names":["React","createContext","useState","useRef","useEffect","io","Peer","SocketContext","socket","ContextProvider","children","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","myStream","peer","key","setOthersStream","$","prop","URL","createObjectURL","setMyStream","text","answer","val","e","console","log","message","video_button","document","createElement","appendChild","createTextNode","video_onclick","getVideoTracks","enabled","audio_button","audio_onclick","getAudioTracks","answerCall","initiator","trickle","data","emit","to","callUser","userToCall","signalData","leaveCall","destroy","window","location","reload"],"mappings":"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","sourcesContent":["import React, { createContext ,useState , useRef, useEffect} from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst ContextProvider =({ children })=> {\r\n    const [stream, setStream] = useState(null);\r\n    const [me, setMe] = useState('');\r\n    const [call,setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('');\r\n    \r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n        .then((currentStream) => {\r\n            setStream(currentStream);\r\n\r\n            myVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('me', (id) => setMe(id));\r\n\r\n        socket.on('calluser', ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivingCall: true, from, name: callerName, signal })\r\n\r\n        });var myStream;\r\n        var peer = new Peer({key: 'PeerJS key'});\r\n        \r\n        var setOthersStream = function(stream){\r\n          $('#others-video').prop('src', URL.createObjectURL(stream));\r\n        };\r\n        \r\n        var setMyStream = function(stream){\r\n          myStream = stream;\r\n          $('#video').prop('src', URL.createObjectURL(stream));\r\n        };\r\n        \r\n        peer.on('open', function(id){\r\n          $('#peer-id').text(id);\r\n        });\r\n        \r\n        peer.on('call', function(call){\r\n          call.answer(myStream);\r\n          call.on('stream', setOthersStream);\r\n        });\r\n        \r\n        $(function(){\r\n          navigator.getUserMedia({audio: true, video: true}, setMyStream, function(){});\r\n          $('#call').on('click', function(){\r\n            var call = peer.call($('#others-peer-id').val(), myStream);\r\n            call.on('stream', setOthersStream);\r\n          });\r\n        });\r\n        \r\n        peer.on('error', function(e){\r\n          console.log(e.message);\r\n        });\r\n        \r\n        //create button to toggle video\r\n        var video_button = document.createElement(\"video_button\");\r\n        video_button.appendChild(document.createTextNode(\"Toggle hold\"));\r\n        \r\n        video_button.video_onclick = function(){\r\n          myStream.getVideoTracks()[0].enabled = !(myStream.getVideoTracks()[0].enabled);\r\n        }\r\n        \r\n        var audio_button = document.createElement(\"audio_button\");\r\n        video_button.appendChild(document.createTextNode(\"Toggle hold\"));\r\n        \r\n        audio_button.audio_onclick = function(){\r\n          myStream.getAudioTracks()[0].enabled = !(myStream.getAudioTracks()[0].enabled);\r\n        }\r\n    }, []);\r\n    \r\n    const answerCall = () =>{\r\n        setCallAccepted(true)\r\n\r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answercall', { signal: data, to: call.from });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n\r\n    }\r\n\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n        peer.on('signal', (data) => {\r\n            socket.emit('calluser', { userToCall: id, signalData: data, from: me, name });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callaccepted',(signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    const leaveCall = () =>{\r\n        setCallEnded(true);\r\n        connectionRef.current.destroy();\r\n\r\n        window.location.reload();\r\n    }\r\n    return(\r\n        <SocketContext.Provider value={{call,callAccepted,myVideo,userVideo,stream,name,setName,callEnded,me,callUser,leaveCall,answerCall,}}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n}\r\n\r\nexport { ContextProvider, SocketContext };"]},"metadata":{},"sourceType":"module"}